/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.unijena.bioinf.ms.nightsky.sdk.model.SpectralMatchingType;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * User/developer friendly parameter subset for the Spectral library search tool.
 */
@JsonPropertyOrder({
  SpectralLibrarySearch.JSON_PROPERTY_ENABLED,
  SpectralLibrarySearch.JSON_PROPERTY_SPECTRA_SEARCH_D_BS,
  SpectralLibrarySearch.JSON_PROPERTY_PEAK_DEVIATION_PPM,
  SpectralLibrarySearch.JSON_PROPERTY_PRECURSOR_DEVIATION_PPM,
  SpectralLibrarySearch.JSON_PROPERTY_SCORING
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.6.0")
public class SpectralLibrarySearch {
  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  public static final String JSON_PROPERTY_SPECTRA_SEARCH_D_BS = "spectraSearchDBs";
  private List<String> spectraSearchDBs;

  public static final String JSON_PROPERTY_PEAK_DEVIATION_PPM = "peakDeviationPpm";
  private Double peakDeviationPpm;

  public static final String JSON_PROPERTY_PRECURSOR_DEVIATION_PPM = "precursorDeviationPpm";
  private Double precursorDeviationPpm;

  public static final String JSON_PROPERTY_SCORING = "scoring";
  private SpectralMatchingType scoring;

  public SpectralLibrarySearch() {
  }

  public SpectralLibrarySearch enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * tags whether the tool is enabled
   * @return enabled
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean isEnabled() {
    return enabled;
  }


  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public SpectralLibrarySearch spectraSearchDBs(List<String> spectraSearchDBs) {
    
    this.spectraSearchDBs = spectraSearchDBs;
    return this;
  }

  public SpectralLibrarySearch addSpectraSearchDBsItem(String spectraSearchDBsItem) {
    if (this.spectraSearchDBs == null) {
      this.spectraSearchDBs = new ArrayList<>();
    }
    this.spectraSearchDBs.add(spectraSearchDBsItem);
    return this;
  }

   /**
   * Structure Databases with Reference spectra to search in.  &lt;p&gt;  Defaults to BIO + Custom Databases. Possible values are available to Database API.
   * @return spectraSearchDBs
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPECTRA_SEARCH_D_BS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getSpectraSearchDBs() {
    return spectraSearchDBs;
  }


  @JsonProperty(JSON_PROPERTY_SPECTRA_SEARCH_D_BS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpectraSearchDBs(List<String> spectraSearchDBs) {
    this.spectraSearchDBs = spectraSearchDBs;
  }

  public SpectralLibrarySearch peakDeviationPpm(Double peakDeviationPpm) {
    
    this.peakDeviationPpm = peakDeviationPpm;
    return this;
  }

   /**
   * Maximum allowed mass deviation in ppm for matching peaks.
   * @return peakDeviationPpm
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PEAK_DEVIATION_PPM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPeakDeviationPpm() {
    return peakDeviationPpm;
  }


  @JsonProperty(JSON_PROPERTY_PEAK_DEVIATION_PPM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPeakDeviationPpm(Double peakDeviationPpm) {
    this.peakDeviationPpm = peakDeviationPpm;
  }

  public SpectralLibrarySearch precursorDeviationPpm(Double precursorDeviationPpm) {
    
    this.precursorDeviationPpm = precursorDeviationPpm;
    return this;
  }

   /**
   * Maximum allowed mass deviation in ppm for matching the precursor. If not specified, the same value as for the peaks is used.
   * @return precursorDeviationPpm
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRECURSOR_DEVIATION_PPM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPrecursorDeviationPpm() {
    return precursorDeviationPpm;
  }


  @JsonProperty(JSON_PROPERTY_PRECURSOR_DEVIATION_PPM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrecursorDeviationPpm(Double precursorDeviationPpm) {
    this.precursorDeviationPpm = precursorDeviationPpm;
  }

  public SpectralLibrarySearch scoring(SpectralMatchingType scoring) {
    
    this.scoring = scoring;
    return this;
  }

   /**
   * Get scoring
   * @return scoring
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCORING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SpectralMatchingType getScoring() {
    return scoring;
  }


  @JsonProperty(JSON_PROPERTY_SCORING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScoring(SpectralMatchingType scoring) {
    this.scoring = scoring;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpectralLibrarySearch spectralLibrarySearch = (SpectralLibrarySearch) o;
    return Objects.equals(this.enabled, spectralLibrarySearch.enabled) &&
        Objects.equals(this.spectraSearchDBs, spectralLibrarySearch.spectraSearchDBs) &&
        Objects.equals(this.peakDeviationPpm, spectralLibrarySearch.peakDeviationPpm) &&
        Objects.equals(this.precursorDeviationPpm, spectralLibrarySearch.precursorDeviationPpm) &&
        Objects.equals(this.scoring, spectralLibrarySearch.scoring);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, spectraSearchDBs, peakDeviationPpm, precursorDeviationPpm, scoring);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpectralLibrarySearch {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    spectraSearchDBs: ").append(toIndentedString(spectraSearchDBs)).append("\n");
    sb.append("    peakDeviationPpm: ").append(toIndentedString(peakDeviationPpm)).append("\n");
    sb.append("    precursorDeviationPpm: ").append(toIndentedString(precursorDeviationPpm)).append("\n");
    sb.append("    scoring: ").append(toIndentedString(scoring)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

