/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ConnectionError
 */
@JsonPropertyOrder({
  ConnectionError.JSON_PROPERTY_ERROR_TYPE,
  ConnectionError.JSON_PROPERTY_ERROR_KLASS,
  ConnectionError.JSON_PROPERTY_SIRIUS_ERROR_CODE,
  ConnectionError.JSON_PROPERTY_SIRIUS_MESSAGE,
  ConnectionError.JSON_PROPERTY_SERVER_RESPONSE_ERROR_CODE,
  ConnectionError.JSON_PROPERTY_SERVER_RESPONSE_ERROR_MESSAGE,
  ConnectionError.JSON_PROPERTY_ERROR,
  ConnectionError.JSON_PROPERTY_WARNING
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.6.0")
public class ConnectionError {
  /**
   * Gets or Sets errorType
   */
  public enum ErrorTypeEnum {
    WARNING("WARNING"),
    
    ERROR("ERROR");

    private String value;

    ErrorTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ErrorTypeEnum fromValue(String value) {
      for (ErrorTypeEnum b : ErrorTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ERROR_TYPE = "errorType";
  private ErrorTypeEnum errorType;

  /**
   * Gets or Sets errorKlass
   */
  public enum ErrorKlassEnum {
    UNKNOWN("UNKNOWN"),
    
    INTERNET("INTERNET"),
    
    LOGIN_SERVER("LOGIN_SERVER"),
    
    LICENSE_SERVER("LICENSE_SERVER"),
    
    TOKEN("TOKEN"),
    
    LOGIN("LOGIN"),
    
    LICENSE("LICENSE"),
    
    TERMS("TERMS"),
    
    APP_SERVER("APP_SERVER"),
    
    WORKER("WORKER");

    private String value;

    ErrorKlassEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ErrorKlassEnum fromValue(String value) {
      for (ErrorKlassEnum b : ErrorKlassEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ERROR_KLASS = "errorKlass";
  private ErrorKlassEnum errorKlass;

  public static final String JSON_PROPERTY_SIRIUS_ERROR_CODE = "siriusErrorCode";
  private Integer siriusErrorCode;

  public static final String JSON_PROPERTY_SIRIUS_MESSAGE = "siriusMessage";
  private String siriusMessage;

  public static final String JSON_PROPERTY_SERVER_RESPONSE_ERROR_CODE = "serverResponseErrorCode";
  private Integer serverResponseErrorCode;

  public static final String JSON_PROPERTY_SERVER_RESPONSE_ERROR_MESSAGE = "serverResponseErrorMessage";
  private String serverResponseErrorMessage;

  public static final String JSON_PROPERTY_ERROR = "error";
  private Boolean error;

  public static final String JSON_PROPERTY_WARNING = "warning";
  private Boolean warning;

  public ConnectionError() {
  }

  public ConnectionError errorType(ErrorTypeEnum errorType) {
    
    this.errorType = errorType;
    return this;
  }

   /**
   * Get errorType
   * @return errorType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ERROR_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ErrorTypeEnum getErrorType() {
    return errorType;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setErrorType(ErrorTypeEnum errorType) {
    this.errorType = errorType;
  }

  public ConnectionError errorKlass(ErrorKlassEnum errorKlass) {
    
    this.errorKlass = errorKlass;
    return this;
  }

   /**
   * Get errorKlass
   * @return errorKlass
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ERROR_KLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ErrorKlassEnum getErrorKlass() {
    return errorKlass;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_KLASS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setErrorKlass(ErrorKlassEnum errorKlass) {
    this.errorKlass = errorKlass;
  }

  public ConnectionError siriusErrorCode(Integer siriusErrorCode) {
    
    this.siriusErrorCode = siriusErrorCode;
    return this;
  }

   /**
   * Get siriusErrorCode
   * @return siriusErrorCode
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIRIUS_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSiriusErrorCode() {
    return siriusErrorCode;
  }


  @JsonProperty(JSON_PROPERTY_SIRIUS_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSiriusErrorCode(Integer siriusErrorCode) {
    this.siriusErrorCode = siriusErrorCode;
  }

  public ConnectionError siriusMessage(String siriusMessage) {
    
    this.siriusMessage = siriusMessage;
    return this;
  }

   /**
   * Get siriusMessage
   * @return siriusMessage
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SIRIUS_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSiriusMessage() {
    return siriusMessage;
  }


  @JsonProperty(JSON_PROPERTY_SIRIUS_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSiriusMessage(String siriusMessage) {
    this.siriusMessage = siriusMessage;
  }

  public ConnectionError serverResponseErrorCode(Integer serverResponseErrorCode) {
    
    this.serverResponseErrorCode = serverResponseErrorCode;
    return this;
  }

   /**
   * Get serverResponseErrorCode
   * @return serverResponseErrorCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVER_RESPONSE_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getServerResponseErrorCode() {
    return serverResponseErrorCode;
  }


  @JsonProperty(JSON_PROPERTY_SERVER_RESPONSE_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServerResponseErrorCode(Integer serverResponseErrorCode) {
    this.serverResponseErrorCode = serverResponseErrorCode;
  }

  public ConnectionError serverResponseErrorMessage(String serverResponseErrorMessage) {
    
    this.serverResponseErrorMessage = serverResponseErrorMessage;
    return this;
  }

   /**
   * Get serverResponseErrorMessage
   * @return serverResponseErrorMessage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SERVER_RESPONSE_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getServerResponseErrorMessage() {
    return serverResponseErrorMessage;
  }


  @JsonProperty(JSON_PROPERTY_SERVER_RESPONSE_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setServerResponseErrorMessage(String serverResponseErrorMessage) {
    this.serverResponseErrorMessage = serverResponseErrorMessage;
  }

  public ConnectionError error(Boolean error) {
    
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean isError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(Boolean error) {
    this.error = error;
  }

  public ConnectionError warning(Boolean warning) {
    
    this.warning = warning;
    return this;
  }

   /**
   * Get warning
   * @return warning
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean isWarning() {
    return warning;
  }


  @JsonProperty(JSON_PROPERTY_WARNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarning(Boolean warning) {
    this.warning = warning;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConnectionError connectionError = (ConnectionError) o;
    return Objects.equals(this.errorType, connectionError.errorType) &&
        Objects.equals(this.errorKlass, connectionError.errorKlass) &&
        Objects.equals(this.siriusErrorCode, connectionError.siriusErrorCode) &&
        Objects.equals(this.siriusMessage, connectionError.siriusMessage) &&
        Objects.equals(this.serverResponseErrorCode, connectionError.serverResponseErrorCode) &&
        Objects.equals(this.serverResponseErrorMessage, connectionError.serverResponseErrorMessage) &&
        Objects.equals(this.error, connectionError.error) &&
        Objects.equals(this.warning, connectionError.warning);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorType, errorKlass, siriusErrorCode, siriusMessage, serverResponseErrorCode, serverResponseErrorMessage, error, warning);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConnectionError {\n");
    sb.append("    errorType: ").append(toIndentedString(errorType)).append("\n");
    sb.append("    errorKlass: ").append(toIndentedString(errorKlass)).append("\n");
    sb.append("    siriusErrorCode: ").append(toIndentedString(siriusErrorCode)).append("\n");
    sb.append("    siriusMessage: ").append(toIndentedString(siriusMessage)).append("\n");
    sb.append("    serverResponseErrorCode: ").append(toIndentedString(serverResponseErrorCode)).append("\n");
    sb.append("    serverResponseErrorMessage: ").append(toIndentedString(serverResponseErrorMessage)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    warning: ").append(toIndentedString(warning)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

