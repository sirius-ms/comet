/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.unijena.bioinf.ms.nightsky.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * The AlignedFeature contains the ID of a feature (aligned over runs) together with some read-only information  that might be displayed in some summary view.
 */
@JsonPropertyOrder({
  Feature.JSON_PROPERTY_FEATURE_ID,
  Feature.JSON_PROPERTY_ALIGNED_FEATURE_ID,
  Feature.JSON_PROPERTY_RUN_ID,
  Feature.JSON_PROPERTY_AVERAGE_MZ,
  Feature.JSON_PROPERTY_RT_START_SECONDS,
  Feature.JSON_PROPERTY_RT_END_SECONDS,
  Feature.JSON_PROPERTY_RT_APEX_SECONDS,
  Feature.JSON_PROPERTY_RT_F_W_H_M,
  Feature.JSON_PROPERTY_APEX_INTENSITY,
  Feature.JSON_PROPERTY_AREA_UNDER_CURVE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.6.0")
public class Feature {
  public static final String JSON_PROPERTY_FEATURE_ID = "featureId";
  private String featureId;

  public static final String JSON_PROPERTY_ALIGNED_FEATURE_ID = "alignedFeatureId";
  private String alignedFeatureId;

  public static final String JSON_PROPERTY_RUN_ID = "runId";
  private String runId;

  public static final String JSON_PROPERTY_AVERAGE_MZ = "averageMz";
  private Double averageMz;

  public static final String JSON_PROPERTY_RT_START_SECONDS = "rtStartSeconds";
  private Double rtStartSeconds;

  public static final String JSON_PROPERTY_RT_END_SECONDS = "rtEndSeconds";
  private Double rtEndSeconds;

  public static final String JSON_PROPERTY_RT_APEX_SECONDS = "rtApexSeconds";
  private Double rtApexSeconds;

  public static final String JSON_PROPERTY_RT_F_W_H_M = "rtFWHM";
  private Double rtFWHM;

  public static final String JSON_PROPERTY_APEX_INTENSITY = "apexIntensity";
  private Double apexIntensity;

  public static final String JSON_PROPERTY_AREA_UNDER_CURVE = "areaUnderCurve";
  private Double areaUnderCurve;

  public Feature() {
  }

  public Feature featureId(String featureId) {
    
    this.featureId = featureId;
    return this;
  }

   /**
   * Identifier
   * @return featureId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEATURE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFeatureId() {
    return featureId;
  }


  @JsonProperty(JSON_PROPERTY_FEATURE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeatureId(String featureId) {
    this.featureId = featureId;
  }

  public Feature alignedFeatureId(String alignedFeatureId) {
    
    this.alignedFeatureId = alignedFeatureId;
    return this;
  }

   /**
   * ID of the AlignedFeature this feature belongs to
   * @return alignedFeatureId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALIGNED_FEATURE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlignedFeatureId() {
    return alignedFeatureId;
  }


  @JsonProperty(JSON_PROPERTY_ALIGNED_FEATURE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlignedFeatureId(String alignedFeatureId) {
    this.alignedFeatureId = alignedFeatureId;
  }

  public Feature runId(String runId) {
    
    this.runId = runId;
    return this;
  }

   /**
   * ID of the run this feature belongs to
   * @return runId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRunId() {
    return runId;
  }


  @JsonProperty(JSON_PROPERTY_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRunId(String runId) {
    this.runId = runId;
  }

  public Feature averageMz(Double averageMz) {
    
    this.averageMz = averageMz;
    return this;
  }

   /**
   * Average m/z over the whole feature
   * @return averageMz
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVERAGE_MZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAverageMz() {
    return averageMz;
  }


  @JsonProperty(JSON_PROPERTY_AVERAGE_MZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAverageMz(Double averageMz) {
    this.averageMz = averageMz;
  }

  public Feature rtStartSeconds(Double rtStartSeconds) {
    
    this.rtStartSeconds = rtStartSeconds;
    return this;
  }

   /**
   * Start of the feature on the retention time axis in seconds
   * @return rtStartSeconds
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RT_START_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getRtStartSeconds() {
    return rtStartSeconds;
  }


  @JsonProperty(JSON_PROPERTY_RT_START_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRtStartSeconds(Double rtStartSeconds) {
    this.rtStartSeconds = rtStartSeconds;
  }

  public Feature rtEndSeconds(Double rtEndSeconds) {
    
    this.rtEndSeconds = rtEndSeconds;
    return this;
  }

   /**
   * End of the feature on the retention time axis in seconds
   * @return rtEndSeconds
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RT_END_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getRtEndSeconds() {
    return rtEndSeconds;
  }


  @JsonProperty(JSON_PROPERTY_RT_END_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRtEndSeconds(Double rtEndSeconds) {
    this.rtEndSeconds = rtEndSeconds;
  }

  public Feature rtApexSeconds(Double rtApexSeconds) {
    
    this.rtApexSeconds = rtApexSeconds;
    return this;
  }

   /**
   * Apex of the feature on the retention time axis in seconds
   * @return rtApexSeconds
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RT_APEX_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getRtApexSeconds() {
    return rtApexSeconds;
  }


  @JsonProperty(JSON_PROPERTY_RT_APEX_SECONDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRtApexSeconds(Double rtApexSeconds) {
    this.rtApexSeconds = rtApexSeconds;
  }

  public Feature rtFWHM(Double rtFWHM) {
    
    this.rtFWHM = rtFWHM;
    return this;
  }

   /**
   * Full width at half maximum of the feature on the retention time axis in seconds
   * @return rtFWHM
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RT_F_W_H_M)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getRtFWHM() {
    return rtFWHM;
  }


  @JsonProperty(JSON_PROPERTY_RT_F_W_H_M)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRtFWHM(Double rtFWHM) {
    this.rtFWHM = rtFWHM;
  }

  public Feature apexIntensity(Double apexIntensity) {
    
    this.apexIntensity = apexIntensity;
    return this;
  }

   /**
   * Intensity of the apex of the feature
   * @return apexIntensity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APEX_INTENSITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getApexIntensity() {
    return apexIntensity;
  }


  @JsonProperty(JSON_PROPERTY_APEX_INTENSITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApexIntensity(Double apexIntensity) {
    this.apexIntensity = apexIntensity;
  }

  public Feature areaUnderCurve(Double areaUnderCurve) {
    
    this.areaUnderCurve = areaUnderCurve;
    return this;
  }

   /**
   * Area under curve of the whole feature
   * @return areaUnderCurve
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AREA_UNDER_CURVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getAreaUnderCurve() {
    return areaUnderCurve;
  }


  @JsonProperty(JSON_PROPERTY_AREA_UNDER_CURVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAreaUnderCurve(Double areaUnderCurve) {
    this.areaUnderCurve = areaUnderCurve;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Feature feature = (Feature) o;
    return Objects.equals(this.featureId, feature.featureId) &&
        Objects.equals(this.alignedFeatureId, feature.alignedFeatureId) &&
        Objects.equals(this.runId, feature.runId) &&
        Objects.equals(this.averageMz, feature.averageMz) &&
        Objects.equals(this.rtStartSeconds, feature.rtStartSeconds) &&
        Objects.equals(this.rtEndSeconds, feature.rtEndSeconds) &&
        Objects.equals(this.rtApexSeconds, feature.rtApexSeconds) &&
        Objects.equals(this.rtFWHM, feature.rtFWHM) &&
        Objects.equals(this.apexIntensity, feature.apexIntensity) &&
        Objects.equals(this.areaUnderCurve, feature.areaUnderCurve);
  }

  @Override
  public int hashCode() {
    return Objects.hash(featureId, alignedFeatureId, runId, averageMz, rtStartSeconds, rtEndSeconds, rtApexSeconds, rtFWHM, apexIntensity, areaUnderCurve);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Feature {\n");
    sb.append("    featureId: ").append(toIndentedString(featureId)).append("\n");
    sb.append("    alignedFeatureId: ").append(toIndentedString(alignedFeatureId)).append("\n");
    sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
    sb.append("    averageMz: ").append(toIndentedString(averageMz)).append("\n");
    sb.append("    rtStartSeconds: ").append(toIndentedString(rtStartSeconds)).append("\n");
    sb.append("    rtEndSeconds: ").append(toIndentedString(rtEndSeconds)).append("\n");
    sb.append("    rtApexSeconds: ").append(toIndentedString(rtApexSeconds)).append("\n");
    sb.append("    rtFWHM: ").append(toIndentedString(rtFWHM)).append("\n");
    sb.append("    apexIntensity: ").append(toIndentedString(apexIntensity)).append("\n");
    sb.append("    areaUnderCurve: ").append(toIndentedString(areaUnderCurve)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

