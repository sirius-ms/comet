buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}")
    }
}

apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    enabled = false
}

jar {
    enabled = true
    archiveClassifier = ''
}
dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
//project
    implementation(project(':sirius_cli'))
    implementation project(':sirius_nightsky_sdk')
    implementation project(':sirius_nightsky_sdk:sirius_nightsky_sdk.jjobs')

//internal
    api "de.unijena.bioinf:jjobs-swing:$jjobs_version"
    // will be ported to sirius_cli later
    api "de.unijena.bioinf.ms:combinatorial_fragmenter:$siriusVersion"
    api "de.unijena.bioinf.ms:affinity_selection_ms:$siriusVersion"
//external
    implementation 'org.jdesktop:timingframework:0.55'
    api "net.sf.opencsv:opencsv:2.3"
    api "org.swinglabs.swingx:swingx-all:1.6.5-1"

    //cdk
    for (module in ["render", "renderextra", "renderawt", "data", "core", "interfaces", "inchi", "smiles", "io", "ioformats", "sdg", "smarts", "legacy", "fingerprint", "silent", "depict"])
        api "org.openscience.cdk:cdk-$module:$cdk_version"

    api 'com.glazedlists:glazedlists:1.11.0'

    api 'org.apache.xmlgraphics:batik-rasterizer:1.16'
    api 'org.apache.xmlgraphics:fop:2.7'

    api 'com.formdev:flatlaf:3.1'

    api 'org.apache.commons:commons-text:1.12.0'
    if (excludeJFX)
        for (m in javaFX_modules) //define jfx as compile only, so that we can decide during build to either package for one or all platforms.
            compileOnly "org.openjfx:$m:$targetCompatibility.+:${siriusTargetPlatform.jfxClassifier().get()}"
    else
        for (m in javaFX_modules) //define jfx as compile only, so that we can decide during build to either package for one or all platforms.
           implementation "org.openjfx:$m:$targetCompatibility.+:${siriusTargetPlatform.jfxClassifier().get()}"
}

artifactory {
    contextUrl = 'https://bio.informatik.uni-jena.de/repository/'
    publish {
        repository {
            if (version.toString().endsWith('-SNAPSHOT'))
                repoKey = 'libs-snapshot-local'
            else
                repoKey = 'libs-release-local'

            username = project.findProperty('de.unijena.bioinf.build.artifactory.username')
            password = project.findProperty('de.unijena.bioinf.build.artifactory.password')
        }
        defaults {
            publications('mavenJava')
        }
    }
}