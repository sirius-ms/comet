/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.sirius.ms.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.sirius.ms.sdk.model.BoolTag;
import io.sirius.ms.sdk.model.DateTag;
import io.sirius.ms.sdk.model.DoubleTag;
import io.sirius.ms.sdk.model.IntTag;
import io.sirius.ms.sdk.model.StringTag;
import io.sirius.ms.sdk.model.Tag;
import io.sirius.ms.sdk.model.TimeTag;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AddTagsRequestInner
 */
@JsonPropertyOrder({
  AddTagsRequestInner.JSON_PROPERTY_CATEGORY,
  AddTagsRequestInner.JSON_PROPERTY_TYPE,
  AddTagsRequestInner.JSON_PROPERTY_BOOL,
  AddTagsRequestInner.JSON_PROPERTY_DATE,
  AddTagsRequestInner.JSON_PROPERTY_REAL,
  AddTagsRequestInner.JSON_PROPERTY_INTEGER,
  AddTagsRequestInner.JSON_PROPERTY_TEXT,
  AddTagsRequestInner.JSON_PROPERTY_TIME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.6.0")
@JsonIgnoreProperties(
  value = "type", // ignore manually set type, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the type to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = BoolTag.class, name = "BoolTag"),
  @JsonSubTypes.Type(value = DateTag.class, name = "DateTag"),
  @JsonSubTypes.Type(value = DoubleTag.class, name = "DoubleTag"),
  @JsonSubTypes.Type(value = IntTag.class, name = "IntTag"),
  @JsonSubTypes.Type(value = StringTag.class, name = "StringTag"),
  @JsonSubTypes.Type(value = Tag.class, name = "Tag"),
  @JsonSubTypes.Type(value = TimeTag.class, name = "TimeTag"),
})

public class AddTagsRequestInner {
  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_BOOL = "bool";
  private Boolean bool;

  public static final String JSON_PROPERTY_DATE = "date";
  private String date;

  public static final String JSON_PROPERTY_REAL = "real";
  private Double real;

  public static final String JSON_PROPERTY_INTEGER = "integer";
  private Integer integer;

  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public static final String JSON_PROPERTY_TIME = "time";
  private String time;

  public AddTagsRequestInner() {
  }

  public AddTagsRequestInner category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * Name of the tag category
   * @return category
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(String category) {
    this.category = category;
  }

  public AddTagsRequestInner type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }

  public AddTagsRequestInner bool(Boolean bool) {
    
    this.bool = bool;
    return this;
  }

   /**
   * Boolean value
   * @return bool
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean isBool() {
    return bool;
  }


  @JsonProperty(JSON_PROPERTY_BOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBool(Boolean bool) {
    this.bool = bool;
  }

  public AddTagsRequestInner date(String date) {
    
    this.date = date;
    return this;
  }

   /**
   * Date value in format yyyy-mm-dd
   * @return date
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(String date) {
    this.date = date;
  }

  public AddTagsRequestInner real(Double real) {
    
    this.real = real;
    return this;
  }

   /**
   * Floating point value
   * @return real
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getReal() {
    return real;
  }


  @JsonProperty(JSON_PROPERTY_REAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReal(Double real) {
    this.real = real;
  }

  public AddTagsRequestInner integer(Integer integer) {
    
    this.integer = integer;
    return this;
  }

   /**
   * Integer value
   * @return integer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInteger() {
    return integer;
  }


  @JsonProperty(JSON_PROPERTY_INTEGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInteger(Integer integer) {
    this.integer = integer;
  }

  public AddTagsRequestInner text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Text value
   * @return text
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }

  public AddTagsRequestInner time(String time) {
    
    this.time = time;
    return this;
  }

   /**
   * Time value in format HH:mm:ss
   * @return time
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTime() {
    return time;
  }


  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTime(String time) {
    this.time = time;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddTagsRequestInner addTagsRequestInner = (AddTagsRequestInner) o;
    return Objects.equals(this.category, addTagsRequestInner.category) &&
        Objects.equals(this.type, addTagsRequestInner.type) &&
        Objects.equals(this.bool, addTagsRequestInner.bool) &&
        Objects.equals(this.date, addTagsRequestInner.date) &&
        Objects.equals(this.real, addTagsRequestInner.real) &&
        Objects.equals(this.integer, addTagsRequestInner.integer) &&
        Objects.equals(this.text, addTagsRequestInner.text) &&
        Objects.equals(this.time, addTagsRequestInner.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, type, bool, date, real, integer, text, time);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddTagsRequestInner {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    bool: ").append(toIndentedString(bool)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    real: ").append(toIndentedString(real)).append("\n");
    sb.append("    integer: ").append(toIndentedString(integer)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

