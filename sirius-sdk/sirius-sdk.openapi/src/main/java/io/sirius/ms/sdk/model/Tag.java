/*
 *  This file is part of the SIRIUS libraries for analyzing MS and MS/MS data
 *
 *  Copyright (C) 2024 Bright Giant GmbH
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with SIRIUS.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *  https://openapi-generator.tech
 *  Do not edit the class manually.
 */


package io.sirius.ms.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.sirius.ms.sdk.model.ValueType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Tag
 */
@JsonPropertyOrder({
  Tag.JSON_PROPERTY_TAG_NAME,
  Tag.JSON_PROPERTY_VALUE_TYPE,
  Tag.JSON_PROPERTY_BOOL,
  Tag.JSON_PROPERTY_INTEGER,
  Tag.JSON_PROPERTY_REAL,
  Tag.JSON_PROPERTY_TEXT,
  Tag.JSON_PROPERTY_DATE,
  Tag.JSON_PROPERTY_TIME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.6.0")
public class Tag {
  public static final String JSON_PROPERTY_TAG_NAME = "tagName";
  private String tagName;

  public static final String JSON_PROPERTY_VALUE_TYPE = "valueType";
  private ValueType valueType;

  public static final String JSON_PROPERTY_BOOL = "bool";
  private Boolean bool;

  public static final String JSON_PROPERTY_INTEGER = "integer";
  private Integer integer;

  public static final String JSON_PROPERTY_REAL = "real";
  private Double real;

  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public static final String JSON_PROPERTY_DATE = "date";
  private String date;

  public static final String JSON_PROPERTY_TIME = "time";
  private String time;

  public Tag() {
  }

  public Tag tagName(String tagName) {
    
    this.tagName = tagName;
    return this;
  }

   /**
   * Name of the tag as defined by the corresponding TagDefinition  Links tag object to their definition.
   * @return tagName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTagName() {
    return tagName;
  }


  @JsonProperty(JSON_PROPERTY_TAG_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTagName(String tagName) {
    this.tagName = tagName;
  }

  public Tag valueType(ValueType valueType) {
    
    this.valueType = valueType;
    return this;
  }

   /**
   * Get valueType
   * @return valueType
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALUE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ValueType getValueType() {
    return valueType;
  }


  @JsonProperty(JSON_PROPERTY_VALUE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValueType(ValueType valueType) {
    this.valueType = valueType;
  }

  public Tag bool(Boolean bool) {
    
    this.bool = bool;
    return this;
  }

   /**
   * Get bool
   * @return bool
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean isBool() {
    return bool;
  }


  @JsonProperty(JSON_PROPERTY_BOOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBool(Boolean bool) {
    this.bool = bool;
  }

  public Tag integer(Integer integer) {
    
    this.integer = integer;
    return this;
  }

   /**
   * Get integer
   * @return integer
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INTEGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInteger() {
    return integer;
  }


  @JsonProperty(JSON_PROPERTY_INTEGER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInteger(Integer integer) {
    this.integer = integer;
  }

  public Tag real(Double real) {
    
    this.real = real;
    return this;
  }

   /**
   * Get real
   * @return real
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getReal() {
    return real;
  }


  @JsonProperty(JSON_PROPERTY_REAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReal(Double real) {
    this.real = real;
  }

  public Tag text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }

  public Tag date(String date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(String date) {
    this.date = date;
  }

  public Tag time(String time) {
    
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTime() {
    return time;
  }


  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTime(String time) {
    this.time = time;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tag tag = (Tag) o;
    return Objects.equals(this.tagName, tag.tagName) &&
        Objects.equals(this.valueType, tag.valueType) &&
        Objects.equals(this.bool, tag.bool) &&
        Objects.equals(this.integer, tag.integer) &&
        Objects.equals(this.real, tag.real) &&
        Objects.equals(this.text, tag.text) &&
        Objects.equals(this.date, tag.date) &&
        Objects.equals(this.time, tag.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tagName, valueType, bool, integer, real, text, date, time);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tag {\n");
    sb.append("    tagName: ").append(toIndentedString(tagName)).append("\n");
    sb.append("    valueType: ").append(toIndentedString(valueType)).append("\n");
    sb.append("    bool: ").append(toIndentedString(bool)).append("\n");
    sb.append("    integer: ").append(toIndentedString(integer)).append("\n");
    sb.append("    real: ").append(toIndentedString(real)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

