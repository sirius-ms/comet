/*
 * SIRIUS Nightsky API
 * REST API that provides the full functionality of SIRIUS and its web services as background service. It is intended as entry-point for scripting languages and software integration SDKs.This API is exposed by SIRIUS 6
 *
 * The version of the OpenAPI document: 2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.sirius.ms.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * DataImportEvent
 */
@JsonPropertyOrder({
  DataImportEvent.JSON_PROPERTY_IMPORT_JOB_ID,
  DataImportEvent.JSON_PROPERTY_IMPORTED_COMPOUND_IDS,
  DataImportEvent.JSON_PROPERTY_IMPORTED_FEATURE_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.6.0")
public class DataImportEvent {
  public static final String JSON_PROPERTY_IMPORT_JOB_ID = "importJobId";
  private String importJobId;

  public static final String JSON_PROPERTY_IMPORTED_COMPOUND_IDS = "importedCompoundIds";
  private List<String> importedCompoundIds = new ArrayList<>();

  public static final String JSON_PROPERTY_IMPORTED_FEATURE_IDS = "importedFeatureIds";
  private List<String> importedFeatureIds = new ArrayList<>();

  public DataImportEvent() {
  }

  public DataImportEvent importJobId(String importJobId) {
    
    this.importJobId = importJobId;
    return this;
  }

   /**
   * Get importJobId
   * @return importJobId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPORT_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImportJobId() {
    return importJobId;
  }


  @JsonProperty(JSON_PROPERTY_IMPORT_JOB_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImportJobId(String importJobId) {
    this.importJobId = importJobId;
  }

  public DataImportEvent importedCompoundIds(List<String> importedCompoundIds) {
    
    this.importedCompoundIds = importedCompoundIds;
    return this;
  }

  public DataImportEvent addImportedCompoundIdsItem(String importedCompoundIdsItem) {
    if (this.importedCompoundIds == null) {
      this.importedCompoundIds = new ArrayList<>();
    }
    this.importedCompoundIds.add(importedCompoundIdsItem);
    return this;
  }

   /**
   * Get importedCompoundIds
   * @return importedCompoundIds
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IMPORTED_COMPOUND_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getImportedCompoundIds() {
    return importedCompoundIds;
  }


  @JsonProperty(JSON_PROPERTY_IMPORTED_COMPOUND_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setImportedCompoundIds(List<String> importedCompoundIds) {
    this.importedCompoundIds = importedCompoundIds;
  }

  public DataImportEvent importedFeatureIds(List<String> importedFeatureIds) {
    
    this.importedFeatureIds = importedFeatureIds;
    return this;
  }

  public DataImportEvent addImportedFeatureIdsItem(String importedFeatureIdsItem) {
    if (this.importedFeatureIds == null) {
      this.importedFeatureIds = new ArrayList<>();
    }
    this.importedFeatureIds.add(importedFeatureIdsItem);
    return this;
  }

   /**
   * Get importedFeatureIds
   * @return importedFeatureIds
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IMPORTED_FEATURE_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getImportedFeatureIds() {
    return importedFeatureIds;
  }


  @JsonProperty(JSON_PROPERTY_IMPORTED_FEATURE_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setImportedFeatureIds(List<String> importedFeatureIds) {
    this.importedFeatureIds = importedFeatureIds;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataImportEvent dataImportEvent = (DataImportEvent) o;
    return Objects.equals(this.importJobId, dataImportEvent.importJobId) &&
        Objects.equals(this.importedCompoundIds, dataImportEvent.importedCompoundIds) &&
        Objects.equals(this.importedFeatureIds, dataImportEvent.importedFeatureIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(importJobId, importedCompoundIds, importedFeatureIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataImportEvent {\n");
    sb.append("    importJobId: ").append(toIndentedString(importJobId)).append("\n");
    sb.append("    importedCompoundIds: ").append(toIndentedString(importedCompoundIds)).append("\n");
    sb.append("    importedFeatureIds: ").append(toIndentedString(importedFeatureIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

