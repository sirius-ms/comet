/*
 *  This file is part of the SIRIUS libraries for analyzing MS and MS/MS data
 *
 *  Copyright (C) 2024 Bright Giant GmbH
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with SIRIUS.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *  https://openapi-generator.tech
 *  Do not edit the class manually.
 */


package io.sirius.ms.sdk.api;

import io.sirius.ms.sdk.model.TagCategory;
import io.sirius.ms.sdk.model.TagCategoryImport;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for TagCategoriesApi
 */
@Ignore
public class TagCategoriesApiTest {

    private final TagCategoriesApi api = new TagCategoriesApi();

    
    /**
     * **EXPERIMENTAL** Add tag categories to the project.
     *
     * **EXPERIMENTAL** Add tag categories to the project. Category names must not exist in the project.
     */
    @Test
    public void addCategoriesTest()  {
        String projectId = null;
        List<TagCategoryImport> tagCategoryImport = null;
        List<TagCategory> response = api.addCategories(projectId, tagCategoryImport);

        // TODO: test validations
    }
    
    /**
     * **EXPERIMENTAL** Add a possible value to the tag category in the project.
     *
     * **EXPERIMENTAL** Add a possible value to the tag category in the project.
     */
    @Test
    public void addPossibleValuesToCategoryTest()  {
        String projectId = null;
        String categoryName = null;
        List<Object> requestBody = null;
        TagCategory response = api.addPossibleValuesToCategory(projectId, categoryName, requestBody);

        // TODO: test validations
    }
    
    /**
     * **EXPERIMENTAL** Delete tag categories with the given name from the specified project-space.
     *
     * **EXPERIMENTAL** Delete tag categories with the given name from the specified project-space.
     */
    @Test
    public void deleteCategoriesTest()  {
        String projectId = null;
        String categoryName = null;
        api.deleteCategories(projectId, categoryName);

        // TODO: test validations
    }
    
    /**
     * **EXPERIMENTAL** Get all tag categories in the given project-space.
     *
     * **EXPERIMENTAL** Get all tag categories in the given project-space.
     */
    @Test
    public void getCategoriesTest()  {
        String projectId = null;
        List<TagCategory> response = api.getCategories(projectId);

        // TODO: test validations
    }
    
    /**
     * **EXPERIMENTAL** Get tag categories by type in the given project-space.
     *
     * **EXPERIMENTAL** Get tag categories by type in the given project-space.
     */
    @Test
    public void getCategoriesByTypeTest()  {
        String projectId = null;
        String categoryType = null;
        List<TagCategory> response = api.getCategoriesByType(projectId, categoryType);

        // TODO: test validations
    }
    
    /**
     * **EXPERIMENTAL** Get tag category by name in the given project-space.
     *
     * **EXPERIMENTAL** Get tag category by name in the given project-space.
     */
    @Test
    public void getCategoryByNameTest()  {
        String projectId = null;
        String categoryName = null;
        TagCategory response = api.getCategoryByName(projectId, categoryName);

        // TODO: test validations
    }
    
}
